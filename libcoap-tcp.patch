diff --git a/src/coap_net.c b/src/coap_net.c
index 91f62e78..73243506 100644
--- a/src/coap_net.c
+++ b/src/coap_net.c
@@ -2134,6 +2134,7 @@ coap_read_session(coap_context_t *ctx, coap_session_t *session, coap_tick_t now)
           if (n == len) {
             size_t size = coap_pdu_parse_size(session->proto, session->read_header,
                                               hdr_size + tok_ext_bytes);
+            size = bytes_read;
             if (size > COAP_DEFAULT_MAX_PDU_RX_SIZE) {
               coap_log_warn("** %s: incoming PDU length too large (%zu > %lu)\n",
                             coap_session_str(session),
diff --git a/src/coap_pdu.c b/src/coap_pdu.c
index e116a1ab..d3b2a2be 100644
--- a/src/coap_pdu.c
+++ b/src/coap_pdu.c
@@ -1505,10 +1505,10 @@ coap_pdu_encode_header(coap_pdu_t *pdu, coap_proto_t proto) {
     if (pdu->type != COAP_MESSAGE_CON)
       pdu->type = COAP_MESSAGE_CON;
 
-    if (proto == COAP_PROTO_WS || proto == COAP_PROTO_WSS)
+    // if (proto == COAP_PROTO_WS || proto == COAP_PROTO_WSS)
       len = 0;
-    else
-      len = pdu->used_size - pdu->e_token_length;
+    // else
+      // len = pdu->used_size - pdu->e_token_length;
     if (len <= COAP_MAX_MESSAGE_SIZE_TCP0) {
       assert(pdu->max_hdr_size >= 2);
       if (pdu->max_hdr_size < 2) {
